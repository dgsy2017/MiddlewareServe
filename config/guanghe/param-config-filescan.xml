<?xml version="1.0" encoding="UTF-8"?>
<param-config>
  <its>  	
  	<filescan>  	  		
  		<!--广河版文件扫描器-->	
  		<scanners>   			
  			
  			<!-- 闯红灯违法图片目录E:/高速路口/闯红灯抓拍15, 格式示例：20121011151204111-1-1-4140-甘N55481-蓝色.jpg -->		
  			<scanner run="false" class="com.its.core.module.filescan.violation.dragonsky.ViolationFileScannerFile3Impl">
				<!--
					scan_interval_second	：每次扫描间隔时间（单位：秒）
					scan_dir				：扫描目录，多个目录之间用逗号分隔
					scan_file_num			：每次扫描最大文件数目
				-->
  				<common
  					scan_interval_second	= "30"
  					scan_dir				= "E:/高速路口/闯红灯抓拍15/,D:/veh/invalid/"
  					scan_file_num			= "100"
  				/>
  				
  				<!-- 针对违法图片的参数 
  					backup_dir					：文件扫描完成后的备份目录
  					invalid_file_dir			：经校验无效的文件存放目录
  					delete_file_dir				：删除过期文件存放目录
  					backup_data_dir				：将违法数据输出到数据库失败后，备份数据的目录
  					require_move_invalid_file	：是否移除经校验无效的文件，通常如果同一个目录有几个扫描器公用时，设置为false
  					delay_delete_day			：删除延时多少天的文件  	
  					max_no_modify_time_allow	：如果文件大小小于配置值，最长允许文件存在时间,单位：秒			
  				-->
  				<violation_param
	  				backup_dir					= "D:/veh/"
	  				invalid_file_dir			= "D:/veh/invalid/"
	  				delete_file_dir				= "D:/veh/oldfile/"
	  				backup_data_dir				= "D:/veh/backupdata/"
	  				require_move_invalid_file	= "true"
	  				delay_delete_day			= "365"
	  				max_no_modify_time_allow	= "60">
	  				
	  				<!-- 备份数据编码转换规则 -->
	  				<backup_data_encoding 
	  					from					= "GB2312" 
	  					to						= "ISO-8859-1"
	  				/> 	
	  				
	  				<!-- 图片参数
	  					img_file_extension		：图片文件扩展名
	  					delay_scan_second       ：以图片的最后修改时间来计算延迟多少秒钟才扫描，（如果间隔时间小于定义的秒数，则不扫描该文件，主要为防止扫描正在传输中的图片）	  					
	  					min_image_file_size		：扫描时允许的最小图片文件大小（字节）
	  					require_add_watermark	：是否添加标记（水印）
	  					image_compress_quality	：图片压缩(取值从0.1~0.9，0.1表示最大限度压缩，-1表示不压缩）
	  					image_compress_ge_size  ：图片大于等于多少字节时启用压缩（image_compress_quality>0且其值>0时才有效）
	  					img_width				：图片目标宽度（如果为空或小于等于０，表示不改变）
	  					img_height				：图片目标高度（如果为空或小于等于０，表示不改变）
						add_md5_verify			: 是否添加MD5较验码
	  				 -->
	  				<image
	  					img_file_extension		= ".jpg"
	  					delay_scan_second       = "600"					
	  					min_image_file_size		= "10240"
	  					require_add_watermark	= "false"
	  					image_compress_quality	= "-1"	  					
	  					img_width				= ""
	  					img_height				= ""
						add_md5_verify			= "false"
	  				/>
	  				
	  				<watermark	 	
	  				    position	= "top"  				     					
	  					font_size	= "40"
	  					font_height	= "46"
	  					font_color	= "yellow"
	  					bg_color	= "black"
	  					left_margin	= "4"
	  					top_margin	= "0"
	  				/>
	  				
	  				<!-- 视频参数 
	  					require_video			：视频文件是否必需
	  					direct_delete_video		：是否直接删除视频文件，如果该参数设为true，则require_video必须设为false才有效，
	  					video_file_extension	：视频文件扩展名
	  					min_video_file_size		：最小视频文件大小（单位：字节）			
	  				-->
	  				<video
	  					require_video			= "false"
	  					direct_delete_video		= "false"
	  					video_file_extension	= ".V.SRD.MPEG"
	  					min_video_file_size		= "102400"
	  				/>			
	  				
	  				<!-- 检查数据是否重复，如果重复，将删除重复图片 -->
	  				<check_repeated
	  					violate_record_temp = "select id from T_ITS_VIOLATE_RECORD_TEMP where image_path_1 like ?"
	  					violate_record = "select id from T_ITS_VIOLATE_RECORD where image_path_1 like ?"
	  				/>	 
	  				 
	  				  				
	  				<!-- 按日、24小时统计T_ITS_VIOLATE_RECORD_TEMP违法信息到表t_its_traffic_day_stat和t_its_traffic_hour_stat 细化到车道一级-->		
					<day_stat_sql
						check_exist = "select id from t_its_traffic_day_stat where road_id = ? and device_id = ? and direction_code=? and lane_no=? and catch_day=?"
						insert = "insert into t_its_traffic_day_stat (id,road_id,device_id,direction_code,lane_no,catch_day,image_sum) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_day_stat set image_sum = image_sum+1 where ID=?"
					/>		  
					
					<hour_stat_sql
						check_exist = "select id from t_its_traffic_hour_stat where road_id=? and device_id=? and direction_code=? and lane_no=? and catch_time=?"
						insert = "insert into t_its_traffic_hour_stat (id,road_id,device_id,direction_code,lane_no,catch_time,flux) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_hour_stat set flux=flux+1 where ID=?"
					/>
	                			
  				</violation_param>
  				
  				<!-- 标准版配置信息  					
  					device_id               ：默认该目录所有图片都使用该设备编号
  					http_url_prefix			 ：图片HTTP访问路径前缀  					
  					insert_sql				 ：入库SQL语句
  				 --> 
  				 <standard_version
	  				device_id               = "622924000004"
	  				http_url_prefix			="http://192.168.1.99:81/veh/"	  				
	  				insert_sql				="insert into t_its_violate_record_temp(id,violate_time,road_id,device_id,direction_code,line,speed,limit_speed,create_time,status,plate,plate_type_id,image_path_1,image_path_2,image_path_3,image_path_4,violate_type) values (?,?,?,?,?,?,?,?,?,'N',?,?,?,?,?,?,?)"
  				 />
  				
  			</scanner>  	
  			
  			<!-- 闯红灯违法图片目录E:/高速路口/闯红灯抓拍16, 格式示例：20121011151204111-1-1-4140-甘N55481-蓝色.jpg -->		
  			<scanner run="false" class="com.its.core.module.filescan.violation.dragonsky.ViolationFileScannerFile3Impl">
				<!--
					scan_interval_second	：每次扫描间隔时间（单位：秒）
					scan_dir				：扫描目录，多个目录之间用逗号分隔
					scan_file_num			：每次扫描最大文件数目
				-->
  				<common
  					scan_interval_second	= "30"
  					scan_dir				= "E:/高速路口/闯红灯抓拍16/,D:/veh/invalid2/"
  					scan_file_num			= "100"
  				/>
  				
  				<!-- 针对违法图片的参数 
  					backup_dir					：文件扫描完成后的备份目录
  					invalid_file_dir			：经校验无效的文件存放目录
  					delete_file_dir				：删除过期文件存放目录
  					backup_data_dir				：将违法数据输出到数据库失败后，备份数据的目录
  					require_move_invalid_file	：是否移除经校验无效的文件，通常如果同一个目录有几个扫描器公用时，设置为false
  					delay_delete_day			：删除延时多少天的文件  	
  					max_no_modify_time_allow	：如果文件大小小于配置值，最长允许文件存在时间,单位：秒			
  				-->
  				<violation_param
	  				backup_dir					= "D:/veh/"
	  				invalid_file_dir			= "D:/veh/invalid2/"
	  				delete_file_dir				= "D:/veh/oldfile/"
	  				backup_data_dir				= "D:/veh/backupdata/"
	  				require_move_invalid_file	= "true"
	  				delay_delete_day			= "365"
	  				max_no_modify_time_allow	= "60">
	  				
	  				<!-- 备份数据编码转换规则 -->
	  				<backup_data_encoding 
	  					from					= "GB2312" 
	  					to						= "ISO-8859-1"
	  				/> 	
	  				
	  				<!-- 图片参数
	  					img_file_extension		：图片文件扩展名
	  					delay_scan_second       ：以图片的最后修改时间来计算延迟多少秒钟才扫描，（如果间隔时间小于定义的秒数，则不扫描该文件，主要为防止扫描正在传输中的图片）	  					
	  					min_image_file_size		：扫描时允许的最小图片文件大小（字节）
	  					require_add_watermark	：是否添加标记（水印）
	  					image_compress_quality	：图片压缩(取值从0.1~0.9，0.1表示最大限度压缩，-1表示不压缩）
	  					image_compress_ge_size  ：图片大于等于多少字节时启用压缩（image_compress_quality>0且其值>0时才有效）
	  					img_width				：图片目标宽度（如果为空或小于等于０，表示不改变）
	  					img_height				：图片目标高度（如果为空或小于等于０，表示不改变）
						add_md5_verify			: 是否添加MD5较验码
	  				 -->
	  				<image
	  					img_file_extension		= ".jpg"
	  					delay_scan_second       = "600"					
	  					min_image_file_size		= "10240"
	  					require_add_watermark	= "false"
	  					image_compress_quality	= "-1"	  					
	  					img_width				= ""
	  					img_height				= ""
						add_md5_verify			= "false"
	  				/>
	  				
	  				<watermark	 	
	  				    position	= "top"  				     					
	  					font_size	= "40"
	  					font_height	= "46"
	  					font_color	= "yellow"
	  					bg_color	= "black"
	  					left_margin	= "4"
	  					top_margin	= "0"
	  				/>
	  				
	  				<!-- 视频参数 
	  					require_video			：视频文件是否必需
	  					direct_delete_video		：是否直接删除视频文件，如果该参数设为true，则require_video必须设为false才有效，
	  					video_file_extension	：视频文件扩展名
	  					min_video_file_size		：最小视频文件大小（单位：字节）			
	  				-->
	  				<video
	  					require_video			= "false"
	  					direct_delete_video		= "false"
	  					video_file_extension	= ".V.SRD.MPEG"
	  					min_video_file_size		= "102400"
	  				/>			
	  				
	  				<!-- 检查数据是否重复，如果重复，将删除重复图片 -->
	  				<check_repeated
	  					violate_record_temp = "select id from T_ITS_VIOLATE_RECORD_TEMP where image_path_1 like ?"
	  					violate_record = "select id from T_ITS_VIOLATE_RECORD where image_path_1 like ?"
	  				/>	 
	  				 
	  				  				
	  				<!-- 按日、24小时统计T_ITS_VIOLATE_RECORD_TEMP违法信息到表t_its_traffic_day_stat和t_its_traffic_hour_stat 细化到车道一级-->		
					<day_stat_sql
						check_exist = "select id from t_its_traffic_day_stat where road_id = ? and device_id = ? and direction_code=? and lane_no=? and catch_day=?"
						insert = "insert into t_its_traffic_day_stat (id,road_id,device_id,direction_code,lane_no,catch_day,image_sum) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_day_stat set image_sum = image_sum+1 where ID=?"
					/>		  
					
					<hour_stat_sql
						check_exist = "select id from t_its_traffic_hour_stat where road_id=? and device_id=? and direction_code=? and lane_no=? and catch_time=?"
						insert = "insert into t_its_traffic_hour_stat (id,road_id,device_id,direction_code,lane_no,catch_time,flux) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_hour_stat set flux=flux+1 where ID=?"
					/>
	                			
  				</violation_param>
  				
  				<!-- 标准版配置信息  					
  					device_id               ：默认该目录所有图片都使用该设备编号
  					http_url_prefix			 ：图片HTTP访问路径前缀  					
  					insert_sql				 ：入库SQL语句
  				 --> 
  				 <standard_version
	  				device_id               = "622924000005"
	  				http_url_prefix			="http://192.168.1.99:81/veh/"	  				
	  				insert_sql				="insert into t_its_violate_record_temp(id,violate_time,road_id,device_id,direction_code,line,speed,limit_speed,create_time,status,plate,plate_type_id,image_path_1,image_path_2,image_path_3,image_path_4,violate_type) values (?,?,?,?,?,?,?,?,?,'N',?,?,?,?,?,?,?)"
  				 />
  				
  			</scanner>
  			
  			<!-- 闯红灯违法图片目录E:/高速路口/闯红灯抓拍17, 格式示例：20121011151204111-1-1-4140-甘N55481-蓝色.jpg -->		
  			<scanner run="false" class="com.its.core.module.filescan.violation.dragonsky.ViolationFileScannerFile3Impl">
				<!--
					scan_interval_second	：每次扫描间隔时间（单位：秒）
					scan_dir				：扫描目录，多个目录之间用逗号分隔
					scan_file_num			：每次扫描最大文件数目
				-->
  				<common
  					scan_interval_second	= "30"
  					scan_dir				= "E:/高速路口/闯红灯抓拍17/,D:/veh/invalid3/"
  					scan_file_num			= "100"
  				/>
  				
  				<!-- 针对违法图片的参数 
  					backup_dir					：文件扫描完成后的备份目录
  					invalid_file_dir			：经校验无效的文件存放目录
  					delete_file_dir				：删除过期文件存放目录
  					backup_data_dir				：将违法数据输出到数据库失败后，备份数据的目录
  					require_move_invalid_file	：是否移除经校验无效的文件，通常如果同一个目录有几个扫描器公用时，设置为false
  					delay_delete_day			：删除延时多少天的文件  	
  					max_no_modify_time_allow	：如果文件大小小于配置值，最长允许文件存在时间,单位：秒			
  				-->
  				<violation_param
	  				backup_dir					= "D:/veh/"
	  				invalid_file_dir			= "D:/veh/invalid3/"
	  				delete_file_dir				= "D:/veh/oldfile/"
	  				backup_data_dir				= "D:/veh/backupdata/"
	  				require_move_invalid_file	= "true"
	  				delay_delete_day			= "365"
	  				max_no_modify_time_allow	= "60">
	  				
	  				<!-- 备份数据编码转换规则 -->
	  				<backup_data_encoding 
	  					from					= "GB2312" 
	  					to						= "ISO-8859-1"
	  				/> 	
	  				
	  				<!-- 图片参数
	  					img_file_extension		：图片文件扩展名
	  					delay_scan_second       ：以图片的最后修改时间来计算延迟多少秒钟才扫描，（如果间隔时间小于定义的秒数，则不扫描该文件，主要为防止扫描正在传输中的图片）	  					
	  					min_image_file_size		：扫描时允许的最小图片文件大小（字节）
	  					require_add_watermark	：是否添加标记（水印）
	  					image_compress_quality	：图片压缩(取值从0.1~0.9，0.1表示最大限度压缩，-1表示不压缩）
	  					image_compress_ge_size  ：图片大于等于多少字节时启用压缩（image_compress_quality>0且其值>0时才有效）
	  					img_width				：图片目标宽度（如果为空或小于等于０，表示不改变）
	  					img_height				：图片目标高度（如果为空或小于等于０，表示不改变）
						add_md5_verify			: 是否添加MD5较验码
	  				 -->
	  				<image
	  					img_file_extension		= ".jpg"
	  					delay_scan_second       = "600"					
	  					min_image_file_size		= "10240"
	  					require_add_watermark	= "false"
	  					image_compress_quality	= "-1"	  					
	  					img_width				= ""
	  					img_height				= ""
						add_md5_verify			= "false"
	  				/>
	  				
	  				<watermark	 	
	  				    position	= "top"  				     					
	  					font_size	= "40"
	  					font_height	= "46"
	  					font_color	= "yellow"
	  					bg_color	= "black"
	  					left_margin	= "4"
	  					top_margin	= "0"
	  				/>
	  				
	  				<!-- 视频参数 
	  					require_video			：视频文件是否必需
	  					direct_delete_video		：是否直接删除视频文件，如果该参数设为true，则require_video必须设为false才有效，
	  					video_file_extension	：视频文件扩展名
	  					min_video_file_size		：最小视频文件大小（单位：字节）			
	  				-->
	  				<video
	  					require_video			= "false"
	  					direct_delete_video		= "false"
	  					video_file_extension	= ".V.SRD.MPEG"
	  					min_video_file_size		= "102400"
	  				/>			
	  				
	  				<!-- 检查数据是否重复，如果重复，将删除重复图片 -->
	  				<check_repeated
	  					violate_record_temp = "select id from T_ITS_VIOLATE_RECORD_TEMP where image_path_1 like ?"
	  					violate_record = "select id from T_ITS_VIOLATE_RECORD where image_path_1 like ?"
	  				/>	 
	  				 
	  				  				
	  				<!-- 按日、24小时统计T_ITS_VIOLATE_RECORD_TEMP违法信息到表t_its_traffic_day_stat和t_its_traffic_hour_stat 细化到车道一级-->		
					<day_stat_sql
						check_exist = "select id from t_its_traffic_day_stat where road_id = ? and device_id = ? and direction_code=? and lane_no=? and catch_day=?"
						insert = "insert into t_its_traffic_day_stat (id,road_id,device_id,direction_code,lane_no,catch_day,image_sum) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_day_stat set image_sum = image_sum+1 where ID=?"
					/>		  
					
					<hour_stat_sql
						check_exist = "select id from t_its_traffic_hour_stat where road_id=? and device_id=? and direction_code=? and lane_no=? and catch_time=?"
						insert = "insert into t_its_traffic_hour_stat (id,road_id,device_id,direction_code,lane_no,catch_time,flux) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_hour_stat set flux=flux+1 where ID=?"
					/>
	                			
  				</violation_param>
  				
  				<!-- 标准版配置信息  					
  					device_id               ：默认该目录所有图片都使用该设备编号
  					http_url_prefix			 ：图片HTTP访问路径前缀  					
  					insert_sql				 ：入库SQL语句
  				 --> 
  				 <standard_version
	  				device_id               = "622924000006"
	  				http_url_prefix			="http://192.168.1.99:81/veh/"	  				
	  				insert_sql				="insert into t_its_violate_record_temp(id,violate_time,road_id,device_id,direction_code,line,speed,limit_speed,create_time,status,plate,plate_type_id,image_path_1,image_path_2,image_path_3,image_path_4,violate_type) values (?,?,?,?,?,?,?,?,?,'N',?,?,?,?,?,?,?)"
  				 />
  				
  			</scanner>
  			
  			<!-- 闯红灯违法图片目录E:/医院十字/Red/, 格式示例：L120131210075515760-甘N55481-蓝色-a.jpg -->		
  			<scanner run="false" class="com.its.core.module.filescan.violation.dragonsky.ViolationFileScannerFile4Impl">
				<!--
					scan_interval_second	：每次扫描间隔时间（单位：秒）
					scan_dir				：扫描目录，多个目录之间用逗号分隔
					scan_file_num			：每次扫描最大文件数目
				-->
  				<common
  					scan_interval_second	= "35"
  					scan_dir				= "E:/医院十字/Red/,,D:/veh/invalid4/"
  					scan_file_num			= "100"
  				/>
  				
  				<!-- 针对违法图片的参数 
  					backup_dir					：文件扫描完成后的备份目录
  					invalid_file_dir			：经校验无效的文件存放目录
  					delete_file_dir				：删除过期文件存放目录
  					backup_data_dir				：将违法数据输出到数据库失败后，备份数据的目录
  					require_move_invalid_file	：是否移除经校验无效的文件，通常如果同一个目录有几个扫描器公用时，设置为false
  					delay_delete_day			：删除延时多少天的文件  	
  					max_no_modify_time_allow	：如果文件大小小于配置值，最长允许文件存在时间,单位：秒			
  				-->
  				<violation_param
	  				backup_dir					= "D:/veh/"
	  				invalid_file_dir			= "D:/veh/invalid4/"
	  				delete_file_dir				= "D:/veh/oldfile/"
	  				backup_data_dir				= "D:/veh/backupdata/"
	  				require_move_invalid_file	= "true"
	  				delay_delete_day			= "365"
	  				max_no_modify_time_allow	= "60">
	  				
	  				<!-- 备份数据编码转换规则 -->
	  				<backup_data_encoding 
	  					from					= "GB2312" 
	  					to						= "ISO-8859-1"
	  				/> 	
	  				
	  				<!-- 图片参数
	  					img_file_extension		：图片文件扩展名
	  					delay_scan_second       ：以图片的最后修改时间来计算延迟多少秒钟才扫描，（如果间隔时间小于定义的秒数，则不扫描该文件，主要为防止扫描正在传输中的图片）	  					
	  					min_image_file_size		：扫描时允许的最小图片文件大小（字节）
	  					require_add_watermark	：是否添加标记（水印）
	  					image_compress_quality	：图片压缩(取值从0.1~0.9，0.1表示最大限度压缩，-1表示不压缩）
	  					image_compress_ge_size  ：图片大于等于多少字节时启用压缩（image_compress_quality>0且其值>0时才有效）
	  					img_width				：图片目标宽度（如果为空或小于等于０，表示不改变）
	  					img_height				：图片目标高度（如果为空或小于等于０，表示不改变）
						add_md5_verify			: 是否添加MD5较验码
	  				 -->
	  				<image
	  					img_file_extension		= "a.jpg"
	  					delay_scan_second       = "600"					
	  					min_image_file_size		= "10240"
	  					require_add_watermark	= "false"
	  					image_compress_quality	= "-1"	  					
	  					img_width				= ""
	  					img_height				= ""
						add_md5_verify			= "false"
	  				/>
	  				
	  				<watermark	 	
	  				    position	= "top"  				     					
	  					font_size	= "40"
	  					font_height	= "46"
	  					font_color	= "yellow"
	  					bg_color	= "black"
	  					left_margin	= "4"
	  					top_margin	= "0"
	  				/>
	  				
	  				<!-- 视频参数 
	  					require_video			：视频文件是否必需
	  					direct_delete_video		：是否直接删除视频文件，如果该参数设为true，则require_video必须设为false才有效，
	  					video_file_extension	：视频文件扩展名
	  					min_video_file_size		：最小视频文件大小（单位：字节）			
	  				-->
	  				<video
	  					require_video			= "false"
	  					direct_delete_video		= "false"
	  					video_file_extension	= ".V.SRD.MPEG"
	  					min_video_file_size		= "102400"
	  				/>			
	  				
	  				<!-- 检查数据是否重复，如果重复，将删除重复图片 -->
	  				<check_repeated
	  					violate_record_temp = "select id from T_ITS_VIOLATE_RECORD_TEMP where image_path_1 like ?"
	  					violate_record = "select id from T_ITS_VIOLATE_RECORD where image_path_1 like ?"
	  				/>	 
	  				 
	  				  				
	  				<!-- 按日、24小时统计T_ITS_VIOLATE_RECORD_TEMP违法信息到表t_its_traffic_day_stat和t_its_traffic_hour_stat 细化到车道一级-->		
					<day_stat_sql
						check_exist = "select id from t_its_traffic_day_stat where road_id = ? and device_id = ? and direction_code=? and lane_no=? and catch_day=?"
						insert = "insert into t_its_traffic_day_stat (id,road_id,device_id,direction_code,lane_no,catch_day,image_sum) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_day_stat set image_sum = image_sum+1 where ID=?"
					/>		  
					
					<hour_stat_sql
						check_exist = "select id from t_its_traffic_hour_stat where road_id=? and device_id=? and direction_code=? and lane_no=? and catch_time=?"
						insert = "insert into t_its_traffic_hour_stat (id,road_id,device_id,direction_code,lane_no,catch_time,flux) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_hour_stat set flux=flux+1 where ID=?"
					/>
	                			
  				</violation_param>
  				
  				<!-- 标准版配置信息  					
  					device_id               ：默认该目录所有图片都使用该设备编号
  					http_url_prefix			 ：图片HTTP访问路径前缀  					
  					insert_sql				 ：入库SQL语句
  				 --> 
  				 <standard_version
	  				device_id               = "622924000001"
	  				http_url_prefix			="http://192.168.1.99:81/veh/"	  				
	  				insert_sql				="insert into t_its_violate_record_temp(id,violate_time,road_id,device_id,direction_code,line,speed,limit_speed,create_time,status,plate,plate_type_id,image_path_1,image_path_2,image_path_3,image_path_4,violate_type) values (?,?,?,?,?,?,?,?,?,'N',?,?,?,?,?,?,?)"
  				 />
  				
  			</scanner>		
			
			<!-- 闯红灯违法图片一体机目录, 格式示例：T20131105155227029_D4_L2_R001_粤B2682S_蓝_1302_[1216,1098,1732,1610].RL.jpg -->		
  			<scanner run="true" class="com.its.core.module.filescan.violation.dragonsky.ViolationFileScannerFile5Impl">
				<!--
					scan_interval_second	：每次扫描间隔时间（单位：秒）
					scan_dir				：扫描目录，多个目录之间用逗号分隔
					scan_file_num			：每次扫描最大文件数目
				-->
  				<common
  					scan_interval_second	= "3"
  					scan_dir				= "E:/一体机目录/"
  					scan_file_num			= "100"
  				/>
  				
  				<!-- 针对违法图片的参数 
  					backup_dir					：文件扫描完成后的备份目录
  					invalid_file_dir			：经校验无效的文件存放目录
  					delete_file_dir				：删除过期文件存放目录
  					backup_data_dir				：将违法数据输出到数据库失败后，备份数据的目录
  					require_move_invalid_file	：是否移除经校验无效的文件，通常如果同一个目录有几个扫描器公用时，设置为false
  					delay_delete_day			：删除延时多少天的文件  	
  					max_no_modify_time_allow	：如果文件大小小于配置值，最长允许文件存在时间,单位：秒			
  				-->
  				<violation_param
	  				backup_dir					= "D:/veh/"
	  				invalid_file_dir			= "D:/veh/invalid/"
	  				delete_file_dir				= "D:/veh/oldfile/"
	  				backup_data_dir				= "D:/veh/backupdata/"
	  				require_move_invalid_file	= "true"
	  				delay_delete_day			= "965"
	  				max_no_modify_time_allow	= "60">
	  				
	  				<!-- 备份数据编码转换规则 -->
	  				<backup_data_encoding 
	  					from					= "GB2312" 
	  					to						= "ISO-8859-1"
	  				/> 	
	  				
	  				<!-- 图片参数
	  					img_file_extension		：图片文件扩展名
	  					delay_scan_second       ：以图片的最后修改时间来计算延迟多少秒钟才扫描，（如果间隔时间小于定义的秒数，则不扫描该文件，主要为防止扫描正在传输中的图片）	  					
	  					min_image_file_size		：扫描时允许的最小图片文件大小（字节）
	  					require_add_watermark	：是否添加标记（水印）
	  					image_compress_quality	：图片压缩(取值从0.1~0.9，0.1表示最大限度压缩，-1表示不压缩）
	  					image_compress_ge_size  ：图片大于等于多少字节时启用压缩（image_compress_quality>0且其值>0时才有效）
	  					img_width				：图片目标宽度（如果为空或小于等于０，表示不改变）
	  					img_height				：图片目标高度（如果为空或小于等于０，表示不改变）
						add_md5_verify			: 是否添加MD5较验码
	  				 -->
	  				<image
	  					img_file_extension		= ".jpg"
	  					delay_scan_second       = "600"					
	  					min_image_file_size		= "10240"
	  					require_add_watermark	= "false"
	  					image_compress_quality	= "-1"	  					
	  					img_width				= ""
	  					img_height				= ""
						add_md5_verify			= "false"
	  				/>
	  				
	  				<watermark	 	
	  				    position	= "top"  				     					
	  					font_size	= "40"
	  					font_height	= "46"
	  					font_color	= "yellow"
	  					bg_color	= "black"
	  					left_margin	= "4"
	  					top_margin	= "0"
	  				/>
	  				
	  				<!-- 视频参数 
	  					require_video			：视频文件是否必需
	  					direct_delete_video		：是否直接删除视频文件，如果该参数设为true，则require_video必须设为false才有效，
	  					video_file_extension	：视频文件扩展名
	  					min_video_file_size		：最小视频文件大小（单位：字节）			
	  				-->
	  				<video
	  					require_video			= "false"
	  					direct_delete_video		= "false"
	  					video_file_extension	= ".V.SRD.MPEG"
	  					min_video_file_size		= "102400"
	  				/>			
	  				
	  				<!-- 检查数据是否重复，如果重复，将删除重复图片 -->
	  				<check_repeated
	  					violate_record_temp = "select id from T_ITS_VIOLATE_RECORD_TEMP where image_path_1 like ?"
	  					violate_record = "select id from T_ITS_VIOLATE_RECORD where image_path_1 like ?"
	  				/>	 
	  				 
	  				  				
	  				<!-- 按日、24小时统计T_ITS_VIOLATE_RECORD_TEMP违法信息到表t_its_traffic_day_stat和t_its_traffic_hour_stat 细化到车道一级-->		
					<day_stat_sql
						check_exist = "select id from t_its_traffic_day_stat where road_id = ? and device_id = ? and direction_code=? and lane_no=? and catch_day=?"
						insert = "insert into t_its_traffic_day_stat (id,road_id,device_id,direction_code,lane_no,catch_day,image_sum) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_day_stat set image_sum = image_sum+1 where ID=?"
					/>		  
					
					<hour_stat_sql
						check_exist = "select id from t_its_traffic_hour_stat where road_id=? and device_id=? and direction_code=? and lane_no=? and catch_time=?"
						insert = "insert into t_its_traffic_hour_stat (id,road_id,device_id,direction_code,lane_no,catch_time,flux) values (?,?,?,?,?,?,?)"
						update = "update t_its_traffic_hour_stat set flux=flux+1 where ID=?"
					/>
	                			
  				</violation_param>
  				
  				<!-- 标准版配置信息  					
  					device_id               ：默认该目录所有图片都使用该设备编号
  					http_url_prefix			 ：图片HTTP访问路径前缀  					
  					insert_sql				 ：入库SQL语句
  				 --> 
  				 <standard_version
	  				http_url_prefix			="http://192.168.1.105:81/veh/"	  				
	  				insert_sql				="insert into t_its_violate_record_temp(id,violate_time,road_id,device_id,direction_code,line,speed,limit_speed,create_time,status,plate,plate_type_id,image_path_1,image_path_2,image_path_3,image_path_4,violate_type) values (?,?,?,?,?,?,?,?,?,'N',?,?,?,?,?,?,?)"
  				 />
  				
  			</scanner>
  										  						  		
  		</scanners>
  	</filescan>
  </its>
</param-config>